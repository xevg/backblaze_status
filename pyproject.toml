[tool.poetry]
name = "backblaze_status"
version = "0.12.7"
description = "Looking at the state of the Backblaze backup"
authors = ["Xev Gittler"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pyqt6 = "^6.6.1"
icecream = "^2.1.3"
psutil = "^5.9.7"
rich = "^13.7.0"
click = "^8.1.7"
configparser = "^6.0.0"
pandas = "^2.2.2"
pytz = "^2024.1"
sqlalchemy = "^2.0.29"
readerwriterlock = "^1.0.9"
pyobjc-framework-cocoa = "^10.2"
file-read-backwards = "^3.1.0"

[tool.poetry.dev-dependencies]

[tool.poetry.group.dev.dependencies]
python-semantic-release = "^9.1.0"
pytest-cov = "^4.1.0"
sphinx = "^7.2.6"
sphinx-autoapi = "^3.0.0"
sphinx-rtd-theme = "^2.0.0"
myst-nb = "^1.0.0"
commitizen = "^3.25.0"
black = "^24.4.0"

[tool.poetry.scripts]
backblaze_status = 'backblaze_status:__main__.run'

[tool.semantic_release]
version_variables = [
    "pyproject.toml:version",
    "src/backblaze_status/__init__.py:__extra_version__"
]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
branch = "main"                             # branch to make releases of
changelog_file = "CHANGELOG.md"             # changelog file
build_command = "poetry build"              # build dists
dist_path = "dist/"                         # where to put dists
upload_to_release = true                    # auto-create GitHub release
upload_to_pypi = false                      # don't auto-upload to PyPI
remove_dist = false                         # don't remove dists
patch_without_tag = true                    # patch release by default

[tool.semantic_release.remote.token]
env = "GH_TOKEN"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver"
version_provider = "poetry"
update_changelog_on_bump = true
version_files = [
    "pyproject.toml:^version"
]
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
